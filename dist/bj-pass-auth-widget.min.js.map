{"version":3,"file":"bj-pass-auth-widget.min.js","mappings":"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","sources":["webpack://BjPassAuthWidget/webpack/universalModuleDefinition","webpack://BjPassAuthWidget/./src/bj-pass-auth-widget.js","webpack://BjPassAuthWidget/webpack/bootstrap","webpack://BjPassAuthWidget/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"BjPassAuthWidget\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BjPassAuthWidget\"] = factory();\n\telse\n\t\troot[\"BjPassAuthWidget\"] = factory();\n})(this, function() {\nreturn ","/**\r\n * bj-pass Authentication Widget\r\n * Widget d'authentification OAuth 2.0/OpenID Connect moderne et sécurisé\r\n * @version 2.0.0\r\n * @author yowedjamal\r\n * @license MIT\r\n */\r\n\r\nclass BjPassAuthWidget {\r\n  constructor(config = {}) {\r\n    this.config = this.mergeConfig(config);\r\n    this.state = {\r\n      isAuthenticated: false,\r\n      tokens: null,\r\n      authWindow: null,\r\n      codeVerifier: null,\r\n      codeChallenge: null\r\n    };\r\n    \r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Fusionne la configuration par défaut avec celle fournie\r\n   */\r\n  mergeConfig(userConfig) {\r\n    const defaultConfig = {\r\n      clientId: '',\r\n      environment: 'test',\r\n      authServer: 'main-as',\r\n      scope: 'openid profile',\r\n      redirectUri: window.location.origin + '/auth/callback',\r\n      pkce: true,\r\n      verifyAccessToken: false,\r\n      beUrl: '',\r\n      beBearer: '',\r\n      ui: {\r\n        showEnvSelector: true,\r\n        container: '#bj-pass-auth-container',\r\n        language: 'fr',\r\n        primaryColor: '#0066cc',\r\n        theme: 'default'\r\n      },\r\n      onSuccess: null,\r\n      onError: null,\r\n      debug: false,\r\n      analytics: false,\r\n      maxRetries: 0,\r\n      retryDelay: 1000\r\n    };\r\n\r\n    return this.deepMerge(defaultConfig, userConfig);\r\n  }\r\n\r\n  /**\r\n   * Fusion profonde d'objets\r\n   */\r\n  deepMerge(target, source) {\r\n    const result = { ...target };\r\n    \r\n    for (const key in source) {\r\n      if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\r\n        result[key] = this.deepMerge(result[key] || {}, source[key]);\r\n      } else {\r\n        result[key] = source[key];\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Initialise le widget\r\n   */\r\n  init() {\r\n    this.log('Initialisation du widget bj-pass...', this.config);\r\n    \r\n    // Vérifier la configuration\r\n    if (!this.config.clientId) {\r\n      this.handleError(new Error('clientId est requis'));\r\n      return;\r\n    }\r\n\r\n    // Générer PKCE si activé\r\n    if (this.config.pkce) {\r\n      this.generatePKCE();\r\n    }\r\n\r\n    // Créer l'interface utilisateur\r\n    this.createUI();\r\n    \r\n    this.log('Widget initialisé avec succès');\r\n  }\r\n\r\n  /**\r\n   * Génère les paramètres PKCE\r\n   */\r\n  generatePKCE() {\r\n    const array = new Uint8Array(32);\r\n    crypto.getRandomValues(array);\r\n    this.state.codeVerifier = this.base64URLEncode(array);\r\n    \r\n    // Générer le code challenge\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(this.state.codeVerifier);\r\n    \r\n    crypto.subtle.digest('SHA-256', data).then(hash => {\r\n      this.state.codeChallenge = this.base64URLEncode(new Uint8Array(hash));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Encode en base64 URL-safe\r\n   */\r\n  base64URLEncode(buffer) {\r\n    return btoa(String.fromCharCode(...buffer))\r\n      .replace(/\\+/g, '-')\r\n      .replace(/\\//g, '_')\r\n      .replace(/=/g, '');\r\n  }\r\n\r\n  /**\r\n   * Crée l'interface utilisateur\r\n   */\r\n  createUI() {\r\n    const container = document.querySelector(this.config.ui.container);\r\n    if (!container) {\r\n      this.log('Container non trouvé, création automatique...');\r\n      this.createContainer();\r\n    }\r\n\r\n    this.renderAuthButton();\r\n  }\r\n\r\n  /**\r\n   * Crée le container s'il n'existe pas\r\n   */\r\n  createContainer() {\r\n    const container = document.createElement('div');\r\n    container.id = 'bj-pass-auth-container';\r\n    container.style.cssText = `\r\n      display: inline-block;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n    `;\r\n    document.body.appendChild(container);\r\n  }\r\n\r\n  /**\r\n   * Affiche le bouton d'authentification\r\n   */\r\n  renderAuthButton() {\r\n    const container = document.querySelector(this.config.ui.container);\r\n    if (!container) return;\r\n\r\n    const button = document.createElement('button');\r\n    button.id = 'bj-pass-auth-button';\r\n    button.textContent = this.config.ui.language === 'fr' ? 'Se connecter' : 'Sign in';\r\n    button.style.cssText = `\r\n      background-color: ${this.config.ui.primaryColor};\r\n      color: white;\r\n      border: none;\r\n      padding: 12px 24px;\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      transition: background-color 0.2s;\r\n    `;\r\n\r\n    button.addEventListener('click', () => this.startAuthFlow());\r\n    button.addEventListener('mouseenter', () => {\r\n      button.style.backgroundColor = this.adjustColor(this.config.ui.primaryColor, -20);\r\n    });\r\n    button.addEventListener('mouseleave', () => {\r\n      button.style.backgroundColor = this.config.ui.primaryColor;\r\n    });\r\n\r\n    container.innerHTML = '';\r\n    container.appendChild(button);\r\n  }\r\n\r\n  /**\r\n   * Ajuste la couleur (plus claire ou plus foncée)\r\n   */\r\n  adjustColor(color, amount) {\r\n    const hex = color.replace('#', '');\r\n    const num = parseInt(hex, 16);\r\n    const r = Math.min(255, Math.max(0, (num >> 16) + amount));\r\n    const g = Math.min(255, Math.max(0, ((num >> 8) & 0x00FF) + amount));\r\n    const b = Math.min(255, Math.max(0, (num & 0x0000FF) + amount));\r\n    return `#${((r << 16) | (g << 8) | b).toString(16).padStart(6, '0')}`;\r\n  }\r\n\r\n  /**\r\n   * Démarre le flux d'authentification\r\n   */\r\n  startAuthFlow() {\r\n    this.log('Démarrage du flux d\\'authentification...');\r\n    \r\n    try {\r\n      const authUrl = this.buildAuthUrl();\r\n      this.openAuthWindow(authUrl);\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Construit l'URL d'authentification\r\n   */\r\n  buildAuthUrl() {\r\n    const baseUrl = this.getAuthServerUrl();\r\n    const params = new URLSearchParams({\r\n      response_type: 'code',\r\n      client_id: this.config.clientId,\r\n      redirect_uri: this.config.redirectUri,\r\n      scope: this.config.scope,\r\n      state: this.generateState()\r\n    });\r\n\r\n    if (this.config.pkce && this.state.codeChallenge) {\r\n      params.append('code_challenge', this.state.codeChallenge);\r\n      params.append('code_challenge_method', 'S256');\r\n    }\r\n\r\n    return `${baseUrl}/oauth2/authorize?${params.toString()}`;\r\n  }\r\n\r\n  /**\r\n   * Obtient l'URL du serveur d'authentification\r\n   */\r\n  getAuthServerUrl() {\r\n    const servers = {\r\n      'main-as': 'https://auth.bj-pass.com',\r\n      'test-as': 'https://test-auth.bj-pass.com'\r\n    };\r\n    \r\n    return servers[this.config.authServer] || servers['main-as'];\r\n  }\r\n\r\n  /**\r\n   * Génère un état aléatoire pour la sécurité\r\n   */\r\n  generateState() {\r\n    const array = new Uint8Array(16);\r\n    crypto.getRandomValues(array);\r\n    return this.base64URLEncode(array);\r\n  }\r\n\r\n  /**\r\n   * Ouvre la fenêtre d'authentification\r\n   */\r\n  openAuthWindow(url) {\r\n    const width = 500;\r\n    const height = 600;\r\n    const left = (window.screen.width - width) / 2;\r\n    const top = (window.screen.height - height) / 2;\r\n\r\n    this.state.authWindow = window.open(\r\n      url,\r\n      'bj-pass-auth',\r\n      `width=${width},height=${height},left=${left},top=${top},scrollbars=yes,resizable=yes`\r\n    );\r\n\r\n    if (!this.state.authWindow) {\r\n      this.handleError(new Error('Popup bloquée. Veuillez autoriser les popups pour ce site.'));\r\n      return;\r\n    }\r\n\r\n    // Écouter la fermeture de la fenêtre\r\n    const checkClosed = setInterval(() => {\r\n      if (this.state.authWindow.closed) {\r\n        clearInterval(checkClosed);\r\n        this.log('Fenêtre d\\'authentification fermée');\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Traite le callback d'authentification\r\n   */\r\n  handleCallback(code, state) {\r\n    this.log('Callback reçu, échange du code...');\r\n    \r\n    if (this.config.beUrl) {\r\n      this.exchangeCodeWithBackend(code);\r\n    } else {\r\n      this.exchangeCodeDirectly(code);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Échange le code via le backend\r\n   */\r\n  async exchangeCodeWithBackend(code) {\r\n    try {\r\n      const response = await fetch(this.config.beUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': this.config.beBearer\r\n        },\r\n        body: JSON.stringify({\r\n          code,\r\n          code_verifier: this.state.codeVerifier,\r\n          redirect_uri: this.config.redirectUri\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur backend: ${response.status}`);\r\n      }\r\n\r\n      const tokens = await response.json();\r\n      this.handleSuccess(tokens);\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Échange le code directement (pour les tests)\r\n   */\r\n  async exchangeCodeDirectly(code) {\r\n    try {\r\n      const tokenUrl = this.getAuthServerUrl() + '/oauth2/token';\r\n      const params = new URLSearchParams({\r\n        grant_type: 'authorization_code',\r\n        client_id: this.config.clientId,\r\n        code,\r\n        redirect_uri: this.config.redirectUri\r\n      });\r\n\r\n      if (this.state.codeVerifier) {\r\n        params.append('code_verifier', this.state.codeVerifier);\r\n      }\r\n\r\n      const response = await fetch(tokenUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: params\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Erreur token: ${response.status}`);\r\n      }\r\n\r\n      const tokens = await response.json();\r\n      this.handleSuccess(tokens);\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Traite le succès de l'authentification\r\n   */\r\n  handleSuccess(tokens) {\r\n    this.log('Authentification réussie !', tokens);\r\n    \r\n    this.state.isAuthenticated = true;\r\n    this.state.tokens = tokens;\r\n\r\n    // Fermer la fenêtre d'authentification\r\n    if (this.state.authWindow) {\r\n      this.state.authWindow.close();\r\n    }\r\n\r\n    // Appeler le callback de succès\r\n    if (typeof this.config.onSuccess === 'function') {\r\n      this.config.onSuccess(tokens);\r\n    }\r\n\r\n    // Mettre à jour l'interface\r\n    this.updateUI();\r\n  }\r\n\r\n  /**\r\n   * Traite les erreurs\r\n   */\r\n  handleError(error) {\r\n    this.log('Erreur:', error);\r\n    \r\n    // Fermer la fenêtre d'authentification\r\n    if (this.state.authWindow) {\r\n      this.state.authWindow.close();\r\n    }\r\n\r\n    // Appeler le callback d'erreur\r\n    if (typeof this.config.onError === 'function') {\r\n      this.config.onError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Met à jour l'interface utilisateur\r\n   */\r\n  updateUI() {\r\n    const button = document.querySelector('#bj-pass-auth-button');\r\n    if (button) {\r\n      button.textContent = this.config.ui.language === 'fr' ? 'Connecté ✓' : 'Connected ✓';\r\n      button.style.backgroundColor = '#28a745';\r\n      button.disabled = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log avec gestion du mode debug\r\n   */\r\n  log(...args) {\r\n    if (this.config.debug) {\r\n      console.log('[bj-pass]', ...args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Détruit le widget\r\n   */\r\n  destroy() {\r\n    this.log('Destruction du widget...');\r\n    \r\n    if (this.state.authWindow) {\r\n      this.state.authWindow.close();\r\n    }\r\n    \r\n    const container = document.querySelector(this.config.ui.container);\r\n    if (container) {\r\n      container.innerHTML = '';\r\n    }\r\n    \r\n    this.state = {\r\n      isAuthenticated: false,\r\n      tokens: null,\r\n      authWindow: null,\r\n      codeVerifier: null,\r\n      codeChallenge: null\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Obtient la configuration actuelle\r\n   */\r\n  getConfig() {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Met à jour la configuration\r\n   */\r\n  updateConfig(newConfig) {\r\n    this.config = this.mergeConfig(newConfig);\r\n    this.log('Configuration mise à jour:', this.config);\r\n  }\r\n\r\n  /**\r\n   * Vérifie si l'utilisateur est authentifié\r\n   */\r\n  isAuthenticated() {\r\n    return this.state.isAuthenticated;\r\n  }\r\n\r\n  /**\r\n   * Obtient les tokens\r\n   */\r\n  getTokens() {\r\n    return this.state.tokens;\r\n  }\r\n}\r\n\r\n// Auto-initialisation si l'attribut data-bj-pass-widget est présent\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const autoInitElements = document.querySelectorAll('[data-bj-pass-widget]');\r\n  \r\n  autoInitElements.forEach(element => {\r\n    const config = JSON.parse(element.getAttribute('data-bj-pass-config') || '{}');\r\n    config.ui = config.ui || {};\r\n    config.ui.container = '#' + element.id;\r\n    \r\n    new BjPassAuthWidget(config);\r\n  });\r\n});\r\n\r\n// Export pour différents environnements\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = BjPassAuthWidget;\r\n} else if (typeof define === 'function' && define.amd) {\r\n  define(() => BjPassAuthWidget);\r\n} else {\r\n  window.BjPassAuthWidget = BjPassAuthWidget;\r\n} ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(204);\n"],"names":["root","factory","exports","module","define","amd","this","BjPassAuthWidget","constructor","config","mergeConfig","state","isAuthenticated","tokens","authWindow","codeVerifier","codeChallenge","init","userConfig","defaultConfig","clientId","environment","authServer","scope","redirectUri","window","location","origin","pkce","verifyAccessToken","beUrl","beBearer","ui","showEnvSelector","container","language","primaryColor","theme","onSuccess","onError","debug","analytics","maxRetries","retryDelay","deepMerge","target","source","result","key","Array","isArray","log","generatePKCE","createUI","handleError","Error","array","Uint8Array","crypto","getRandomValues","base64URLEncode","data","TextEncoder","encode","subtle","digest","then","hash","buffer","btoa","String","fromCharCode","replace","document","querySelector","createContainer","renderAuthButton","createElement","id","style","cssText","body","appendChild","button","textContent","addEventListener","startAuthFlow","backgroundColor","adjustColor","innerHTML","color","amount","hex","num","parseInt","Math","min","max","toString","padStart","authUrl","buildAuthUrl","openAuthWindow","error","baseUrl","getAuthServerUrl","params","URLSearchParams","response_type","client_id","redirect_uri","generateState","append","servers","url","left","screen","width","top","height","open","checkClosed","setInterval","closed","clearInterval","handleCallback","code","exchangeCodeWithBackend","exchangeCodeDirectly","response","fetch","method","headers","JSON","stringify","code_verifier","ok","status","json","handleSuccess","tokenUrl","grant_type","close","updateUI","disabled","args","destroy","getConfig","updateConfig","newConfig","getTokens","querySelectorAll","forEach","element","parse","getAttribute","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}